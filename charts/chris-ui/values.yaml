# Default values for chris-ui.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

nameOverride: ""
fullnameOverride: ""

# ChRIS_ui configuration
#####################

# -- (required) URL of ChRIS backend.
cubeUrl:
# -- (required) URL of PFDCM.
pfdcmUrl:
# -- (optional) URL of OHIF.
ohifUrl:
# -- (optional) URL of Ackee web analytics.
ackeeServer:
# -- (optional) Domain ID for Ackee web analytics.
ackeeDomainId:

# -- Extra environment variables.
# -- See https://static-web-server.net/configuration/environment-variables/
extraEnv:
  SERVER_HEALTH: true

# Resource configuration
#####################

# -- This sets the container image more information can be found here: https://kubernetes.io/docs/concepts/containers/images/
image:
  registry: ghcr.io
  repository: fnndsc/chris_ui
  # -- This sets the pull policy for images.
  pullPolicy: IfNotPresent
  # -- Overrides the image tag whose default is the chart appVersion.
  tag: ""

# -- This is for the secrets for pulling an image from a private repository more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
imagePullSecrets: []

# -- This section builds out the service account more information can be found here: https://kubernetes.io/docs/concepts/security/service-accounts/
serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# -- This is for setting Kubernetes Annotations to a Pod.
# -- For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/ 
podAnnotations: {}

# -- This is for setting Kubernetes Labels to a Pod.
# -- For more information checkout: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  runAsNonRoot: true
  seccompProfile:
    type: RuntimeDefault

resources: {}
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# -- This is to setup the liveness and readiness probes more information can be found here: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/
# -- Recommended to use the /health endpoint. See https://static-web-server.net/configuration/environment-variables/#server_health
# -- Note: it is recommended to set `extraEnv.SERVER_HEALTH=true`
livenessProbe:
  httpGet:
    path: /health
    port: http
readinessProbe:
  httpGet:
    path: /health
    port: http
startupProbe:
  httpGet:
    path: /health
    port: http
  failureThreshold: 60
  periodSeconds: 1

nodeSelector: {}

tolerations: []

affinity: {}

# -- Labels for the Deployment/Service resource.
labels: {}

# -- Annotations for the Deployment/Service resource.
annotations: {}

# Kind configuration
#####################

# -- kind must be one of:
# --
# -- - "Deployment": use (standard) Kubernetes Deployment and Service APIs
# -- - "Service": use the KNative Serving API
kind: Deployment


# KNative Serving configuration
#####################

# -- KNative Serving revision annotations.
# -- Only used with `kind=Service`
revisionAnnotations: {}
  # autoscaling.knative.dev/target: "100"
  # autoscaling.knative.dev/min-scale: "1"
  # autoscaling.knative.dev/max-scale: "3"
  # autoscaling.knative.dev/scale-to-zero-pod-retention-period: "1m5s"


# Deployment configuration
#####################

# -- This will set the replicaset count more information can be found here: https://kubernetes.io/docs/concepts/workloads/controllers/replicaset/
# -- Ignored if `autoscaling.enabled=true`
# -- Only used with `kind=Deployment`
replicaCount: 1

# -- This is for setting up a service more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/
# -- Only used with `kind=Deployment`
service:
  # This sets the service type more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  type: ClusterIP
  # This sets the ports more information can be found here: https://kubernetes.io/docs/concepts/services-networking/service/#field-spec-ports
  port: 8080
  # nodePort:

# -- This block is for setting up the ingress for more information can be found here: https://kubernetes.io/docs/concepts/services-networking/ingress/
# -- Only used with `kind=Deployment`
ingress:
  enabled: false
  className: ""
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  hosts:
    - host: chart-example.local
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

# -- OpenShift route.
# -- Only used with `kind=Deployment`
route:
  enabled: false
  host: chart-example.local
  tls:
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
    destinationCACertificate: ''

# -- This section is for setting up autoscaling more information can be found here: https://kubernetes.io/docs/concepts/workloads/autoscaling/
# -- Only used with `kind=Deployment`
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

