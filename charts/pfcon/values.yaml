# Default values for pfcon.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

# Global settings
#####################

global:
  # storage class to use for persistent volume claims
  storageClass: ""

  # optional security context to apply to all pods
  # podSecurityContext:
  #   runAsUser: 123456
  #   runAsGroup: 789

replicaCount: 1

podAnnotations: {}

service:
  type: ClusterIP
  port: 5005

storage:
  existingClaim: ""
  size: 100Gi
  accessModes: [ "ReadWriteOnce" ]
  # storageClass:

nodeSelector: {}

pfcon:
  image:
    repository: ghcr.io/fnndsc/pfcon
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""

  workers: 4
  workerTimeout: 3600

  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 500m
      memory: 384Mi

  # pfcon configuration
  # Recommended to keep as-is
  config:
    innetwork: true
    storageEnv: filesystem

pman:
  image:
    repository: ghcr.io/fnndsc/pman
    pullPolicy: IfNotPresent
    tag: "6.1.0"

  workers: 4
  workerTimeout: 30

  # It is unnecessary to increase pman's resources to above the minimum because
  # pman doesn't do anything besides sending and receiving HTTP requests.
  resources:
    limits:
      cpu: 200m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi

  # pman configuration
  # https://github.com/fnndsc/pman#environment-variables
  # SECRET_KEY, CONTAINER_ENV, STORAGE_TYPE, VOLUME_NAME, and CONTAINER_USER are handled automaticallY
  config:
    JOB_LABELS: chrisproject.org/job=plugininstance
    ENABLE_HOME_WORKAROUND: "yes"
    REMOVE_JOBS: "yes"
    IGNORE_LIMITS: "no"

  # Set securityContext of containers created by pman to have the same securityContext as .global.podSecurityContext
  # or the default fnndsc/cube container user, so that the container user can write to the shared volume's filesystem.
  # Should be disabled on OpenShift.
  setSecurityContext: true
