{{- if .Values.pfdcm.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-oxidicom
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pfdcm.listenerLabels" . | nindent 4 }}
  annotations:
    kubernetes.io/description: "ChRIS DICOM receiver"
spec:
  replicas: {{ .Values.pfdcm.listener.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}
      app.kubernetes.io/name: oxidicom
  template:
    metadata:
      {{- with .Values.pfdcm.listener.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pfdcm.listenerLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
        {{- include "cube.waitServerReady" . | nindent 8 }}
      containers:
        - name: oxidicom
          image: "{{ .Values.pfdcm.listener.image.repository }}:{{ .Values.pfdcm.listener.image.tag }}"
          imagePullPolicy: {{ .Values.pfdcm.listener.image.pullPolicy }}
          ports:
            - name: scp
              containerPort: {{ .Values.pfdcm.listener.service.port }}
              protocol: TCP
              {{- if .Values.pfdcm.listener.hostPort }}
              hostPort: {{ .Values.pfdcm.listener.hostPort }}
              {{- end }}
          resources:
            {{- toYaml .Values.pfdcm.listener.resources | nindent 12 }}
          env:
            - name: OXIDICOM_AMQP_ADDRESS
              valueFrom:
                secretKeyRef:
                  {{- if not .Values.rabbitmq.serviceBindings.enabled }}
                  {{- fail "Oxidicom requires .Values.rabbitmq.serviceBindings.enabled: true"}}
                  {{- end }}
                  name: {{ .Release.Name }}-rabbitmq-svcbind
                  key: uri
            - name: OXIDICOM_NATS_ADDRESS
              value: {{ include "chris.nats.address" . | quote }}
            - name: OXIDICOM_LISTENER_PORT
              value: {{ .Values.pfdcm.listener.service.port | quote }}
            - name: OXIDICOM_FILES_ROOT
              value: /data
            - name: OXIDICOM_SCP_AET
              value: {{ .Values.pfdcm.aet | required ".Values.pfdcm.aet is required for oxidicom" | quote }}
              {{- if .Values.pfdcm.listener.config.listenerThreads }}
            - name: OXIDICOM_LISTENER_THREADS
              value: {{ .Values.pfdcm.listener.config.listenerThreads | quote }}
              {{- end }}
              {{- if .Values.pfdcm.listener.config.logging }}
            - name: RUST_LOG
              value: {{ .Values.pfdcm.listener.config.logging | quote }}
              {{- end }}
              {{- if .Values.pfdcm.listener.config.tokioThreads }}
            - name: TOKIO_WORKER_THREADS
              value: {{ .Values.pfdcm.listener.config.tokioThreads | quote }}
              {{- end }}
              {{- /* DICOM SCP Options */}}
              {{- if .Values.pfdcm.listener.config.strictPduLength }}
            - name: OXIDICOM_SCP_STRICT
              value: {{ .Values.pfdcm.listener.config.strictPduLength | quote }}
              {{- end }}
              {{- if .Values.pfdcm.listener.config.maxPduLength }}
            - name: OXIDICOM_SCP_MAX_PDU_LENGTH
              value: {{ .Values.pfdcm.listener.config.maxPduLength | quote }}
              {{- end }}
              {{- if .Values.pfdcm.listener.config.uncompressedOnly }}
            - name: OXIDICOM_SCP_UNCOMPRESSED_ONLY
              value: {{ .Values.pfdcm.listener.config.uncompressedOnly | quote }}
              {{- end }}
              {{- if .Values.pfdcm.listener.config.promiscuous }}
            - name: OXIDICOM_SCP_PROMISCUOUS
              value: {{ .Values.pfdcm.listener.config.promiscuous | quote }}
              {{- end }}

              {{- /* Extra environment variables, manually specified */}}
              {{- if .Values.pfdcm.listener.env }}
              {{- .Values.pfdcm.listener.env | toYaml | nindent 12 }}
              {{- end }}
          volumeMounts:
            - mountPath: /data
              name: file-storage

      {{- include "cube.pod" . | nindent 6 }}
      {{- include "cube.podAffinityWorkaround" . | nindent 6 }}
{{ end }}
