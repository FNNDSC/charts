{{- define "pfdcm.dicomwebLabels" }}
app.kubernetes.io/name: pfdcm-dicomweb
app.kubernetes.io/instance: {{ .Release.Name }}
app.kubernetes.io/component: pfdcm
app.kubernetes.io/part-of: chris
{{- end }}
{{- if .Values.pfdcm.dicomweb.enabled -}}
{{- if (not .Values.pfdcm.enabled) -}}
{{ fail "pfdcm.dicomweb should not be enabled without pfdcm.enabled" }}
{{- end -}}
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-pfdcm-dicomweb
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pfdcm.dicomwebLabels" . | indent 4 }}
  annotations:
    kubernetes.io/description: "Adapter for pfdcm's storage implementing the DICOMweb API standard."
spec:
  type: {{ .Values.pfdcm.dicomweb.service.type }}
  ports:
    - port: {{ .Values.pfdcm.dicomweb.service.port }}
      targetPort: http
      protocol: TCP
      name: http
      {{- if .Values.pfdcm.dicomweb.service.nodePort }}
      nodePort: {{ .Values.pfdcm.dicomweb.service.nodePort }}
      {{- end }}
  selector:
    {{- include "pfdcm.dicomwebLabels" . | indent 4 }}

---

apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-pfdcm-dicomweb
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "pfdcm.dicomwebLabels" . | indent 4 }}
  annotations:
    kubernetes.io/description: "Adapter for pfdcm's storage implementing the DICOMweb API standard."
spec:
  replicas: {{ .Values.pfdcm.dicomweb.replicaCount }}
  selector:
    matchLabels:
      {{- include "pfdcm.dicomwebLabels" . | indent 6 }}
  template:
    metadata:
      {{- with .Values.pfdcm.dicomweb.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "pfdcm.dicomwebLabels" . | indent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "chris.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.global.podSecurityContext | nindent 8 }}
      containers:
        - name: pypx-dicomweb
          image: "{{ .Values.pfdcm.dicomweb.image.repository }}:{{ .Values.pfdcm.dicomweb.image.tag }}"
          imagePullPolicy: {{ .Values.pfdcm.dicomweb.image.pullPolicy }}
          env:
            - name: PYPX_LOG_DIR
              value: /home/dicom/log
            - name: PYPX_DATA_DIR
              value: /home/dicom
            - name: PYPX_REPACK_DATA_MOUNTPOINT
              value: /home/dicom
            - name: PORT
              value: {{ .Values.pfdcm.dicomweb.service.port | quote }}
            - name: RUST_LOG
              value: {{ .Values.pfdcm.dicomweb.rustLog | quote }}
          volumeMounts:
            - mountPath: /home/dicom
              name: data
          ports:
            - name: http
              containerPort: {{ .Values.pfdcm.dicomweb.service.port }}
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /readyz
              port: http
            periodSeconds: 3
          resources:
            {{- toYaml .Values.pfdcm.dicomweb.resources | nindent 12 }}

      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: {{ include "pfdcm.claimName" . }}
      {{- include "pfdcm.podAffinityWorkaround" . | nindent 6 }}
{{ end }}
