apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-server
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: cube-server
    app.kubernetes.io/instance: {{ .Release.Name }}-server
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: helm
  annotations:
    kubernetes.io/description: "ChRIS backend server"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}-server
  template:
    metadata:
      name: {{ .Release.Name }}-server
      labels:
        app.kubernetes.io/name: cube-server
        app.kubernetes.io/instance: {{ .Release.Name }}-server
        app.kubernetes.io/part-of: {{ .Release.Name }}
        app.kubernetes.io/component: backend
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/managed-by: helm
    spec:
      initContainers:
      - name: migratedb
        image: {{ .Values.image }}
        command:
        - sh
        - -c
        - 'python migratedb.py -u $POSTGRES_USER -p $POSTGRES_PASSWORD -d $POSTGRES_DB --host $DATABASE_HOST --noinput'
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-cube-config
        - secretRef:
            name: {{ .Release.Name }}-db-config
        - secretRef:
            name: {{ .Release.Name }}-cube-secrets
        volumeMounts:
        - mountPath: /var/chris
          name: file-storage

      containers:
      - name: server
        image: {{ .Values.image }}
        ports:
        - name: http
          containerPort: 8000
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-cube-config
        - secretRef:
            name: {{ .Release.Name }}-db-config
        - secretRef:
            name: {{ .Release.Name }}-cube-secrets
        env:
        - name: DJANGO_COLLECTSTATIC
          value: "on"
        volumeMounts:
        - mountPath: /var/chris
          name: file-storage
        resources:
        {{- toYaml .Values.server.resources | nindent 10 }}

      volumes:
      - name: file-storage
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-cube-files

      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}

---

apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-server
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: cube-server-service
    app.kubernetes.io/instance: {{ .Release.Name }}-server
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: helm
spec:
  type: ClusterIP
  ports:
    - port: 8000
      targetPort: http
  selector:
    app.kubernetes.io/instance: {{ .Release.Name }}-server
