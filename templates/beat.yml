apiVersion: apps/v1

kind: Deployment
metadata:
  name: {{ .Release.Name }}-beat
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: cube-celery-beat
    app.kubernetes.io/instance: {{ .Release.Name }}-beat
    app.kubernetes.io/part-of: {{ .Release.Name }}
    app.kubernetes.io/component: backend
    app.kubernetes.io/version: {{ .Chart.AppVersion }}
    app.kubernetes.io/managed-by: helm
  annotations:
    kubernetes.io/description: "ChRIS backend celery beat"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/instance: {{ .Release.Name }}-beat
  template:
    metadata:
      name: {{ .Release.Name }}-beat
      labels:
        app.kubernetes.io/name: cube-celery-beat
        app.kubernetes.io/instance: {{ .Release.Name }}-beat
        app.kubernetes.io/part-of: {{ .Release.Name }}
        app.kubernetes.io/component: backend
        app.kubernetes.io/version: {{ .Chart.AppVersion }}
        app.kubernetes.io/managed-by: helm
    spec:
      containers:
      - name: beat
        image: {{ .Values.image }}
        command: ["celery", "-A", "core", "beat", "-l", "info", "--scheduler", "django_celery_beat.schedulers:DatabaseScheduler"]
        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-cube-config
        - secretRef:
            name: {{ .Release.Name }}-db-config
        - secretRef:
            name: {{ .Release.Name }}-cube-secrets
        volumeMounts:
          - mountPath: /var/chris
            name: file-storage

      volumes:
        - name: file-storage
          persistentVolumeClaim:
            claimName: {{ .Release.Name }}-cube-files

      {{- if .Values.securityContext }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8 }}
      {{- end }}
