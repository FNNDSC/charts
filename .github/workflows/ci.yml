name: ci

on:
  push:
    branches: [ master, dev ]
  pull_request:

jobs:
  test-cube:
    name: Test CUBE
    runs-on: ubuntu-22.04

    steps:
    - name: Git checkout
      uses: actions/checkout@v4
    - name: Start Kubernetes
      run: kind create cluster --config=testing/kind-with-nodeport.yml
    - name: Update Helm dependencies
      run: helm dependency update ./charts/chris
    - name: Install chris
      run: |
        helm install --create-namespace -n ghactions khris-test ./charts/chris \
          -f testing/ghactions-values.yml --set cube.ingress.nodePortHost=$(hostname)

    - name: Wait for pods to be ready
      run: kubectl wait --for=condition=ready pod -n ghactions -l app.kubernetes.io/name=chris-heart --timeout=300s

    - name: Assert superuser created
      run: |
        actual="$(kubectl logs --tail=1 -n ghactions -l app.kubernetes.io/name=chris-heart -c create-superuser)"
        expected='Created superuser "khris"'
        if [ "$actual" != "$expected" ]; then
          echo "::error ::Expected: >>>$expected<<<    Actual: >>>$actual<<<"
          exit 1
        fi
    - name: Run helm test
      run: |
        set +e
        helm test -n ghactions khris-test
        status=$?
        kubectl logs -n ghactions khris-test-test-cube-works
        exit $status
    - name: Run upgrade and set new admin password
      run: helm upgrade -n ghactions khris-test ./charts/chris --reuse-values --set chris_admin.password="newpassword1234"
    - name: Assert secret was changed
      run: |
        actual="$(kubectl get secret -n ghactions khris-test-chris-superuser -o jsonpath='{.data.password}' | base64 --decode)"
        expected="newpassword1234"
        if [ "$actual" != "$expected" ]; then
          echo "::error ::Expected: >>>$expected<<<    Actual: >>>$actual<<<"
          exit 1
        fi
    - name: Restart server
      id: restart
      run: |
        kubectl rollout restart deployment -n ghactions -l app.kubernetes.io/name=chris-heart
        kubectl rollout status deployment -n ghactions -l app.kubernetes.io/name=chris-heart --timeout=300s
        most_recent_pod=$(kubectl get pods -n ghactions --sort-by=.metadata.creationTimestamp -l app.kubernetes.io/name=chris-heart -o custom-columns=:metadata.name | tail -n 1)
        echo "new_pod=$most_recent_pod" >> "$GITHUB_OUTPUT"
    - name: Wait for pods to be ready again
      run: kubectl wait --for=condition=ready pod -n ghactions -l app.kubernetes.io/name=chris-heart --timeout=300s
    - name: Assert superuser password changed
      run: |
        actual="$(kubectl logs --tail=1 -n ghactions ${{ steps.restart.outputs.new_pod }} -c create-superuser)"
        expected='Updated password for user "khris"'
        if [ "$actual" != "$expected" ]; then
          echo "::error ::Expected: >>>$expected<<<    Actual: >>>$actual<<<"
          exit 1
        fi
    - name: Run helm test again
      run: |
        set +e
        helm test -n ghactions khris-test
        status=$?
        kubectl logs -n ghactions khris-test-test-cube-works
        exit $status
    - name: Test NodePort access
      run: curl --fail-with-body http://localhost:32000/api/v1/
    - name: Uninstall chart
      run: helm uninstall -n ghactions khris-test
    - name: Delete namespace
      run: kubectl delete namespace ghactions
    - name: Delete cluster
      run: kind delete cluster
  
  # https://helm.sh/docs/howto/chart_releaser_action/
  release:
    needs: [ test-cube ]
    runs-on: ubuntu-22.04
    if: github.event_name == 'push' && github.event.ref == 'refs/heads/master'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - name: Run chart-releaser
        uses: helm/chart-releaser-action@v1.5.0
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
